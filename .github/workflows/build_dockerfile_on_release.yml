name: Update repo1

on: 
 release:
  types:
    - created
    - published

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2

     - name: Fetch pangolin version
       shell: bash
       run: |
         ##Get pangoLEARN version
         curl -sL https://api.github.com/repos/cov-lineages/pangoLEARN/releases/latest | \
         jq -r ".tag_name" > versions/pangoLEARN-latest-version.txt
         pangoLEARN_VER=$(cat versions/pangoLEARN-latest-version.txt)
         echo $pangoLEARN_VER

         ##Get pango-designation version
         curl -sL https://api.github.com/repos/cov-lineages/pango-designation/releases/latest | \
         jq -r ".tag_name" > versions/pangodesignation-latest-version.txt
         pangodesign_VER=$(cat versions/pangodesignation-latest-version.txt)
         echo $pangodesign_VER         

         ##Get constellations version
         curl -sL https://api.github.com/repos/cov-lineages/constellations/releases/latest | \
         jq -r ".tag_name" > versions/constellations-latest-version.txt
         constellation_VER= $(cat versions/constellations-latest-version.txt) 
         echo $constellation_VER
         
         ##Get pangolin version
	 curl -sL https://api.github.com/repos/cov-lineages/pangolin/releases/latest | \
         jq -r ".tag_name" > versions/pangolin-latest-version.txt
         PANGOLIN_VER=$(cat versions/pangolin-latest-version.txt)
         echo $PANGOLIN_VER
	
	 ##Get scorpio version 
         curl -sL https://api.github.com/repos/cov-lineages/scorpio/releases/latest | \
         jq -r ".tag_name" > versions/scorpio-latest-version.txt
         scorpio_VER=$(cat versions/scorpio-latest-version.txt)
         echo $scorpio_VER
 

     - name: Check for modified files
       id: git-check
       run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
     - name: Make new Dockerfile for latest release; commit
       if: steps.git-check.outputs.modified == 'true'
       run: |
         REPO_VER=$(cat versions/pangolin-latest-version.txt | sed 's|v||') 
         echo $REPO_VER
    
     - name: Login to Docker Hub
       uses: docker/login-action@v1
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_PASS }}
     
     - name: Set up Docker Buildx
       id: buildx
       uses: docker/setup-buildx-action@v1

     - name: Check out pipeline code 
       uses: docker/build-push-action@v2
   
     - name: Build new docker image
       shell: bash 
       run: |
         docker build --no-cache -f Dockerfile -t sofsta/artic-ncov2019-illumina:latest .           
     
     - name: Push Docker image to DockerHub
       shell: bash
       run: |
         docker image push sofsta/artic-ncov2019-illumina:latest

#     - name: Check out pipeline code
#       uses: docker/build-push-action@v2
         
