name: Update repo1

#on: push
on: 
 release:
  types:
    - created
    - published

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
       #with:
       #  token: ${{ secrets.REPO }}
     - name: Fetch release version for repo2
       shell: bash
       run: |
         echo Hello there! 
         #curl -sL https://api.github.com/repos/sofstam/repo2/releases/latest | \
         #jq -r ".tag_name" > versions/latest-version.txt
         #echo "$(cat versions/latest-version.txt)"
         curl -sL https://api.github.com/repos/cov-lineages/pangoLEARN/releases/latest | \
         jq -r ".tag_name" > versions/pangoLEARN-latest-version.txt
         echo "$(cat versions/pangoLEARN-latest-version.txt)"
         curl -sL https://api.github.com/repos/cov-lineages/pango-designation/releases/latest | \
         jq -r ".tag_name" > versions/pangodesignation-latest-version.txt
         echo "$(cat versions/pangodesignation-latest-version.txt)"
         curl -sL https://api.github.com/repos/cov-lineages/constellations/releases/latest | \
         jq -r ".tag_name" > versions/constellations-latest-version.txt
         echo "$(cat versions/constellations-latest-version.txt)" 
         curl -sL https://api.github.com/repos/cov-lineages/pangolin/releases/latest | \
         jq -r ".tag_name" > versions/pangolin-latest-version.txt
         echo "$(cat versions/pangolin-latest-version.txt)"     
     - name: Check for modified files
       id: git-check
       run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
     - name: Make new Dockerfile for latest release; commit
       if: steps.git-check.outputs.modified == 'true'
       run: |
         REPO_VER=$(cat versions/latest-version.txt | sed 's|v||') 
         echo "$REPO_VER"
  push_dockerhub:
   needs: get-version
   if: needs.get-version.outputs.new-dockerfile == 'true'   
   name: Push new Docker image to Docker Hub
   runs-on: ubuntu-latest
   env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }} 
